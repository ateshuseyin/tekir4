<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                template="/layout/containerViewTabBase.xhtml">

    <ui:param name="viewState" value="" />

    <ui:define name="context-menu-2">
        <ui:repeat value="#{bean.permittedStateTransitionActions}" var="act">
            <li>
                <p:commandLink action="#{bean.trigger(act)}" styleClass="context-command" ajax="false" rendered="#{not act.hasDialog()}">
                    <i class="#{act.icon}"></i>
                    <h:outputText value=" #{messages['general.button.'.concat( act.name )]}" />
                </p:commandLink>
                <p:commandLink action="#{bean.prepareTriggerDlg(act)}" styleClass="context-command" ajax="true" rendered="#{act.hasDialog()}" update="stateDlg" oncomplete="PF('stateDlg').show()">
                    <i class="#{act.icon}"></i>
                    <h:outputText value=" #{messages['general.button.'.concat( act.name )]}" />
                </p:commandLink>
            </li>
        </ui:repeat>
        <ui:repeat value="#{bean.permittedStateActions}" var="act">
            <li>
                <p:commandLink action="#{bean.triggerExec(act)}" styleClass="context-command" ajax="false" rendered="#{not act.hasDialog()}">
                    <i class="#{act.icon}"></i>
                    <h:outputText value=" #{messages['general.button.'.concat( act.name )]}" />
                </p:commandLink>
            </li>
        </ui:repeat>
    </ui:define>
    
    <ui:define name="context-menu-4">
        <li>
            <p:commandLink action="#{changeOwnerDialog.openDialog()}" styleClass="context-command" ajax="false" rendered="#{bean.hasChangeOwnerPermission()}">
                <i class="fa fa-random"></i>
                <h:outputText value=" #{messages['general.button.ChangeOwner']}" />
                <p:ajax event="dialogReturn" listener="#{bean.onOwnerChange}" update=":states" />
            </p:commandLink>
        </li>
    </ui:define>

    <ui:define name="state-header">

        <p:outputPanel id="states">
        <ul class="states pull-right">
            <li role="presentation">
                <div style="font-weight: bold;"> Belge Sahibi</div>
                <div >
                    #{userLookup.getUserName(bean.entity.owner)}
                </div>
            </li>
            <li role="presentation">
                <div style="font-weight: bold;">#{messages['voucherState.name.'.concat(bean.entity.state.name)]} </div>
                <div >#{bean.entity.stateReason}</div>
            </li>

        </ul>
            </p:outputPanel>

    </ui:define>

    <ui:define name="includes">
        <p:dialog header="#{messages['dialog.caption.State']}" id="stateDlg" widgetVar="stateDlg" >
            <h:form id="stateDlgForm" style="width: 250px;">
                <div class="row">
                    <t:inputSuggestion label="general.label.Reason" value="#{bean.entity.stateReason}" group="#{bean.entity.class.simpleName}" listener="" columnClass="col-xs-12"/>
                    <t:inputTextarea label="general.label.Info" value="#{bean.entity.stateInfo}" columnClass="col-xs-12"/>

                    <ui:insert name="stateDlgExt" />

                </div>

                <div class="row actionButtons">
                    <div class="col-xs-12 pull-right">
                        <p:commandButton id="select" value="#{messages['general.button.Ok']}" icon="fa fa-check" action="#{bean.triggerDlgAction()}" styleClass="btn-primary" oncomplete="PF('stateDlg').hide()"/>
                        <p:commandButton id="close" value="#{messages['general.button.Cancel']}" icon="ui-icon-close" onclick="PF('stateDlg').hide()" />
                    </div>
                </div>
            </h:form>
        </p:dialog>
    </ui:define>

</ui:composition>
